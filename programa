import math
import numpy as np
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt

from shapely.geometry import Polygon

def arranjo(rho, espaco, passo):
  coleta = espaco
  passo = passo
  rho = rho
  passox = np.arange(0, coleta, passo)
  coletaz = int(coleta/passo)
  passoz = np.zeros([coletaz], int)
  gama = 6.67*10**(-11)                                                                       
  si2mg = 10**5                                                                                 
  km2m = 10*3 
  c = 2*gama*rho*si2mg*km2m
  df = pd.DataFrame([{'constante': c,
                     'passo_x': passox,
                     'passo_z': passoz}])
  return df

def poli_3(x1, x2, x3, z1, z2, z3):
  poli = pd.DataFrame([{'x': [x1, x2, x3, x1],
                        'z': [z1, z2, z3, z1]}])
  return poli
  
def poli_3(x1, x2, x3, z1, z2, z3):
  poli = pd.DataFrame([{'x': [x1, x2, x3, x1],
                        'z': [z1, z2, z3, z1]}])
  return poli
def plot_graf(arranjo, poligono, calculo):
  plt.figure(figsize=(16, 8))
  sns.lineplot(x = arranjo['passo_x'][0], y = calculo['anomalia'][0], marker="o")
  plt.title('Gráfico da Anomalia', fontsize = 20)
  plt.xlabel('Arranjo em km')
  plt.ylabel('Variação gravimétrica em mGal')
  plt.show()
  plt.figure(figsize=(16, 8))
  sns.lineplot(x = arranjo['passo_x'][0], y = calculo['anomalia'][0], marker="o")
  plt.title('Representação dos vértices da figura em 2D com a anomalia', fontsize = 20)
  plt.xlabel('Eixo X em km')
  plt.ylabel('Eixo Z em km')
  sns.scatterplot(x = poligono['x'][0], y = poligono['z'][0])
  plt.show()


arranjo_1 = arranjo(400, 10, 0.5)
poly_1 = poli_3(3, 4, 2, -1, -4, -4)
cal_1 = calculo_3(arranjo_1, poly_1)
plot_graf(arranjo_1, poly_1, cal_1)
